<!DOCTYPE html>
%html
  %head
    %meta{charset: 'utf-8'}
    %meta{name: 'viewport', content: 'width=device-width, initial-scale=1.0'}
    %meta{name: 'description', content: "#{content_for?(:description) ? yield(:description) : 'the html parser with job worker!'}"}
    %title= content_for?(:title) ? yield(:title) : 'the parser'
    %link{rel:'icon', href:"#{asset_path 'icons/favicon.png'}"}
    %link{rel:'icon', type:'image/x-icon', href:"#{asset_path 'icons/favicon.png'}"}
    %meta{property:'og:title', content:"#{content_for?(:title) ? yield(:title) : 'the parser'}"}
    %meta{property:'og:description', content:"#{content_for?(:description) ? yield(:description) : 'the html parser with job worker!'}"}
    %meta{property:'og:url', content:"#{request.original_url}"}
    - if flash[:notice]
      %meta{property:'flash:notice', content:"#{flash[:notice]}"}
    - if flash[:alert]
      %meta{property:'flash:alert', content:"#{flash[:alert]}"}
    - if flash[:error]
      %meta{property:'flash:error', content:"#{flash[:error]}"}

    = stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': true
    = javascript_include_tag 'application', 'data-turbolinks-track': true
    = content_for :head
    = csrf_meta_tags

  %body
    %main.main{role: 'main'}
      = yield
      = content_for :body



// utente:
// nome: 'paolo'
// email: paolo.guglielmini.vr@gmail.com
// #weekly_summary metodo che prende tutti i cinema, tutti i film che hanno in promozione e invia la mail all'utnete in questione

// cinema
// nome: uci
// indirizzo: viale del lavoro...
// indirizzo web: http:.../rassegne
// nome_promozione: 'ricomincio da 3'
// descrizone_promozione: 'i martedì film a 3€'
// enabled: true (false non esegue il parse ne invia la mail per quel cinema)
// ha n film
// #parse: metodo generico

// UciCinema < Cinema
// #parse usa nokogiriri per fare il parse, trovare film nuovi ed aggiornare quindi la lista dei propri film in promozione

// oggetto film:
// name: minion
// data: 27 ottobre
// appartiene a 1 cinema

// ogni notte un job:
// Cinema.find_each do |cinema|
// cinema.parse # aggiorna i propri film con i nuovi film in promozione

// ogni settimana un job:
// User.find_each do |user|
// UserMailer.weekly_summary(user).deliver_now



